version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "redispass"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # 9092 w sieci docker (dla usług), 29092 na hoście (dla klientów spoza dockera)
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  flyway:
    image: flyway/flyway:10
    container_name: flyway
    depends_on:
      - postgres
    command: >
      -url=jdbc:postgresql://postgres:5432/app
      -user=app
      -password=app
      -connectRetries=10
      -locations=filesystem:/flyway/sql
      migrate
    volumes:
      - ./flyway/sql:/flyway/sql:ro
    # usuń jeśli chcesz, by kontener działał w tle po migracji
    restart: "no"

volumes:
  pgdata:
  redisdata:
